{"ast":null,"code":"import _objectSpread from \"/Users/amilabdullayev/Desktop/Projects/web-payment-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {}\n});\nvar Consumer = ThemeContext.Consumer,\n    Provider = ThemeContext.Provider;\n\nfunction ThemeProvider(_ref) {\n  var _ref$prefixes = _ref.prefixes,\n      prefixes = _ref$prefixes === void 0 ? {} : _ref$prefixes,\n      dir = _ref.dir,\n      children = _ref.children;\n  var contextValue = useMemo(function () {\n    return {\n      prefixes: _objectSpread({}, prefixes),\n      dir: dir\n    };\n  }, [prefixes, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  var _useContext = useContext(ThemeContext),\n      prefixes = _useContext.prefixes;\n\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useIsRTL() {\n  var _useContext2 = useContext(ThemeContext),\n      dir = _useContext2.dir;\n\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  var isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  var _opts = opts,\n      prefix = _opts.prefix,\n      _opts$forwardRefAs = _opts.forwardRefAs,\n      forwardRefAs = _opts$forwardRefAs === void 0 ? isClassy ? 'ref' : 'innerRef' : _opts$forwardRefAs;\n  var Wrapped = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n    var props = Object.assign({}, _ref2);\n    props[forwardRefAs] = ref;\n    var bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n      bsPrefix: bsPrefix\n    }));\n  });\n  Wrapped.displayName = \"Bootstrap(\".concat(Component.displayName || Component.name, \")\");\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/node_modules/react-bootstrap/esm/ThemeProvider.js"],"names":["React","useContext","useMemo","jsx","_jsx","ThemeContext","createContext","prefixes","Consumer","Provider","ThemeProvider","dir","children","contextValue","value","useBootstrapPrefix","prefix","defaultPrefix","useIsRTL","createBootstrapComponent","Component","opts","isClassy","prototype","isReactComponent","forwardRefAs","Wrapped","forwardRef","ref","props","bsPrefix","displayName","name","ThemeConsumer"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAMC,YAAY,GAAG,aAAaL,KAAK,CAACM,aAAN,CAAoB;AACpDC,EAAAA,QAAQ,EAAE;AAD0C,CAApB,CAAlC;AAGA,IACEC,QADF,GAGIH,YAHJ,CACEG,QADF;AAAA,IAEEC,QAFF,GAGIJ,YAHJ,CAEEI,QAFF;;AAKA,SAASC,aAAT,OAIG;AAAA,2BAHDH,QAGC;AAAA,MAHDA,QAGC,8BAHU,EAGV;AAAA,MAFDI,GAEC,QAFDA,GAEC;AAAA,MADDC,QACC,QADDA,QACC;AACD,MAAMC,YAAY,GAAGX,OAAO,CAAC;AAAA,WAAO;AAClCK,MAAAA,QAAQ,oBAAOA,QAAP,CAD0B;AAGlCI,MAAAA,GAAG,EAAHA;AAHkC,KAAP;AAAA,GAAD,EAIxB,CAACJ,QAAD,EAAWI,GAAX,CAJwB,CAA5B;AAKA,SAAO,aAAaP,IAAI,CAACK,QAAD,EAAW;AACjCK,IAAAA,KAAK,EAAED,YAD0B;AAEjCD,IAAAA,QAAQ,EAAEA;AAFuB,GAAX,CAAxB;AAID;;AAED,OAAO,SAASG,kBAAT,CAA4BC,MAA5B,EAAoCC,aAApC,EAAmD;AACxD,oBAEIhB,UAAU,CAACI,YAAD,CAFd;AAAA,MACEE,QADF,eACEA,QADF;;AAGA,SAAOS,MAAM,IAAIT,QAAQ,CAACU,aAAD,CAAlB,IAAqCA,aAA5C;AACD;AACD,OAAO,SAASC,QAAT,GAAoB;AACzB,qBAEIjB,UAAU,CAACI,YAAD,CAFd;AAAA,MACEM,GADF,gBACEA,GADF;;AAGA,SAAOA,GAAG,KAAK,KAAf;AACD;;AAED,SAASQ,wBAAT,CAAkCC,SAAlC,EAA6CC,IAA7C,EAAmD;AACjD,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8BA,IAAI,GAAG;AACnCL,IAAAA,MAAM,EAAEK;AAD2B,GAAP;AAG9B,MAAMC,QAAQ,GAAGF,SAAS,CAACG,SAAV,IAAuBH,SAAS,CAACG,SAAV,CAAoBC,gBAA5D,CAJiD,CAI6B;;AAE9E,cAGIH,IAHJ;AAAA,MACEL,MADF,SACEA,MADF;AAAA,iCAEES,YAFF;AAAA,MAEEA,YAFF,mCAEiBH,QAAQ,GAAG,KAAH,GAAW,UAFpC;AAIA,MAAMI,OAAO,GAAG,aAAa1B,KAAK,CAAC2B,UAAN,CAAiB,iBAC3CC,GAD2C,EACnC;AAAA,QADyCC,KACzC;AACTA,IAAAA,KAAK,CAACJ,YAAD,CAAL,GAAsBG,GAAtB;AACA,QAAME,QAAQ,GAAGf,kBAAkB,CAACc,KAAK,CAACC,QAAP,EAAiBd,MAAjB,CAAnC;AACA,WAAO,aAAaZ,IAAI,CAACgB,SAAD,kCAAiBS,KAAjB;AACtBC,MAAAA,QAAQ,EAAEA;AADY,OAAxB;AAGD,GAP4B,CAA7B;AAQAJ,EAAAA,OAAO,CAACK,WAAR,uBAAmCX,SAAS,CAACW,WAAV,IAAyBX,SAAS,CAACY,IAAtE;AACA,SAAON,OAAP;AACD;;AAED,SAASP,wBAAT,EAAmCX,QAAQ,IAAIyB,aAA/C;AACA,eAAevB,aAAf","sourcesContent":["import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {}\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    dir\n  }), [prefixes, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}