{"ast":null,"code":"import _slicedToArray from\"/Users/amilabdullayev/Desktop/Projects/web-payment-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from\"react\";import{Col,Container,Row}from\"react-bootstrap\";import Category from\"../components/Category\";import Message from\"../components/Message\";import{CategoryListContext}from\"../contexts/CategoryListContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function HomeScreen(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),categories=_useState2[0],setCategories=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];// useEffect(() => {\n//     fetch(\"testURL\")\n//         .then((response) => response.json())\n//         .then((data) => {\n//             console.info(error);\n//             setCategories(data)\n//         })\n//         .catch((error) => {\n//             console.error(error);\n//             setError(error)\n//         })\n//         .finally(() => setLoading(false))\n// }, [categories, error]);\n// context api\nvar categoryList=useContext(CategoryListContext);useEffect(function(){try{setCategories(categoryList);}catch(error){console.error(error);setError(error);}finally{setLoading(false);}},[]);if(loading)return\"Loading...\";if(error)return/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error});return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Categories\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Row,{children:categories.map(function(category){return/*#__PURE__*/_jsx(Col,{sm:12,md:6,lg:4,xl:3,children:/*#__PURE__*/_jsx(Category,{category:category})},category.id);})})})]});}export default HomeScreen;","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/src/screens/HomeScreen.jsx"],"names":["React","useState","useEffect","useContext","Col","Container","Row","Category","Message","CategoryListContext","HomeScreen","categories","setCategories","loading","setLoading","error","setError","categoryList","console","map","category","id"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,UAApC,KAAqD,OAArD,CACA,OAAQC,GAAR,CAAaC,SAAb,CAAwBC,GAAxB,KAAkC,iBAAlC,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAAQC,mBAAR,KAAkC,iCAAlC,C,wFAEA,QAASC,CAAAA,UAAT,EAAsB,CAElB,cAAoCT,QAAQ,EAA5C,wCAAOU,UAAP,eAAmBC,aAAnB,eACA,eAA8BX,QAAQ,CAAC,IAAD,CAAtC,yCAAOY,OAAP,eAAgBC,UAAhB,eACA,eAA0Bb,QAAQ,CAAC,IAAD,CAAlC,yCAAOc,KAAP,eAAcC,QAAd,eAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,GAAMC,CAAAA,YAAY,CAAGd,UAAU,CAACM,mBAAD,CAA/B,CAEAP,SAAS,CAAC,UAAM,CACZ,GAAI,CACAU,aAAa,CAACK,YAAD,CAAb,CACH,CAAC,MAAOF,KAAP,CAAc,CACZG,OAAO,CAACH,KAAR,CAAcA,KAAd,EACAC,QAAQ,CAACD,KAAD,CAAR,CACH,CALD,OAKU,CACND,UAAU,CAAC,KAAD,CAAV,CACH,CAEJ,CAVQ,CAUN,EAVM,CAAT,CAaA,GAAID,OAAJ,CAAa,MAAO,YAAP,CACb,GAAIE,KAAJ,CAAW,mBAAO,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,KAA3B,EAAP,CAEX,mBACI,MAAC,SAAD,yBACI,kCADJ,cAEI,kCACI,KAAC,GAAD,WACKJ,UAAU,CAACQ,GAAX,CAAe,SAACC,QAAD,qBACZ,KAAC,GAAD,EAAuB,EAAE,CAAE,EAA3B,CAA+B,EAAE,CAAE,CAAnC,CAAsC,EAAE,CAAE,CAA1C,CAA6C,EAAE,CAAE,CAAjD,uBACI,KAAC,QAAD,EAAU,QAAQ,CAAEA,QAApB,EADJ,EAAUA,QAAQ,CAACC,EAAnB,CADY,EAAf,CADL,EADJ,EAFJ,GADJ,CAcH,CAED,cAAeX,CAAAA,UAAf","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport Category from \"../components/Category\";\nimport Message from \"../components/Message\";\nimport {CategoryListContext} from \"../contexts/CategoryListContext\";\n\nfunction HomeScreen() {\n\n    const [categories, setCategories] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // useEffect(() => {\n    //     fetch(\"testURL\")\n    //         .then((response) => response.json())\n    //         .then((data) => {\n    //             console.info(error);\n    //             setCategories(data)\n    //         })\n    //         .catch((error) => {\n    //             console.error(error);\n    //             setError(error)\n    //         })\n    //         .finally(() => setLoading(false))\n    // }, [categories, error]);\n\n    // context api\n    const categoryList = useContext(CategoryListContext);\n\n    useEffect(() => {\n        try {\n            setCategories(categoryList);\n        } catch (error) {\n            console.error(error);\n            setError(error);\n        } finally {\n            setLoading(false);\n        }\n\n    }, []);\n\n\n    if (loading) return \"Loading...\";\n    if (error) return <Message variant=\"danger\">{error}</Message>\n\n    return (\n        <Container>\n            <h1>Categories</h1>\n            <div>\n                <Row>\n                    {categories.map((category) => (\n                        <Col key={category.id} sm={12} md={6} lg={4} xl={3}>\n                            <Category category={category}/>\n                        </Col>\n                    ))}\n                </Row>\n            </div>\n        </Container>\n    );\n}\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}