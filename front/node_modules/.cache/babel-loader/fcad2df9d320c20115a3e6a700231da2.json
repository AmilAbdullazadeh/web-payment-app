{"ast":null,"code":"var _jsxFileName = \"/Users/amilabdullayev/Desktop/Projects/web-payment-app/src/screens/FormScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Container, Form, Row, Button, Card } from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const categoryList = [{\n    \"id\": \"1\",\n    \"name\": \"Mobile\",\n    \"providers\": [{\n      \"id\": \"1\",\n      \"name\": \"Bakcell\",\n      \"fields\": [{\n        \"id\": \"prefix_id\",\n        \"type\": 4,\n        \"label\": \"Prefix\",\n        \"options\": [{\n          \"k\": \"1\",\n          \"v\": \"055\"\n        }]\n      }, {\n        \"id\": \"phone_number\",\n        \"type\": 2,\n        \"label\": \"Phone number\"\n      }]\n    }, {\n      \"id\": \"2\",\n      \"name\": \"Nar\",\n      \"fields\": [{\n        \"id\": \"prefix_id\",\n        \"type\": 4,\n        \"label\": \"Prefix\",\n        \"options\": [{\n          \"k\": \"1\",\n          \"v\": \"055\"\n        }, {\n          \"k\": \"2\",\n          \"v\": \"077\"\n        }]\n      }]\n    }, {\n      \"id\": \"3\",\n      \"name\": \"Azercell\",\n      \"fields\": [{\n        \"id\": \"prefix_id\",\n        \"type\": 4,\n        \"label\": \"Prefix\",\n        \"options\": [{\n          \"k\": \"1\",\n          \"v\": \"050\"\n        }, {\n          \"k\": \"2\",\n          \"v\": \"051\"\n        }]\n      }]\n    }]\n  }, {\n    \"id\": \"2\",\n    \"name\": \"Utilities\",\n    \"providers\": [{\n      \"id\": \"1\",\n      \"name\": \"Azeriqaz\",\n      \"fields\": [{\n        \"id\": \"subscriber_id\",\n        \"type\": 1,\n        \"label\": \"Subscriber\"\n      }]\n    }, {\n      \"id\": \"2\",\n      \"name\": \"Azerisu\",\n      \"fields\": [{\n        \"id\": \"prefix_id\",\n        \"type\": 4,\n        \"label\": \"Prefix\",\n        \"options\": [{\n          \"k\": \"1\",\n          \"v\": \"Residential\"\n        }, {\n          \"k\": \"2\",\n          \"v\": \"Commercial\"\n        }]\n      }, {\n        \"id\": \"subscriber_id\",\n        \"type\": 1,\n        \"label\": \"Subscriber\"\n      }]\n    }, {\n      \"id\": \"3\",\n      \"name\": \"Grand Hayat\",\n      \"fields\": [{\n        \"id\": \"client_code\",\n        \"type\": 2,\n        \"label\": \"Client code\"\n      }]\n    }]\n  } // {\n  //     \"id\": \"3\",\n  //     \"name\": \"Banks\",\n  //     \"providers\": [\n  //         {\n  //             \"id\": \"1\",\n  //             \"name\": \"Kapital Bank\",\n  //             \"fields\": [\n  //                 {}\n  //             ]\n  //         },\n  //         {\n  //             \"id\": \"1\",\n  //             \"name\": \"Pasha Bank\",\n  //             \"fields\": [\n  //                 {}\n  //             ]\n  //         },\n  //         {\n  //             \"id\": \"1\",\n  //             \"name\": \"Access Bank\",\n  //             \"fields\": [\n  //                 {}\n  //             ]\n  //         }\n  //     ]\n  // }\n  ];\n  const categoryId = match.params.categoryId;\n  const providerId = match.params.providerId;\n  const [type, setType] = useState(null);\n  const [field, setField] = useState();\n  const [providers, setProviders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // form\n\n  const [number, setNumber] = useState('');\n  const [exp_month, setExpMonth] = useState('');\n  const [exp_year, setExpYear] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [option, setOption] = useState('');\n  useEffect(() => {\n    try {\n      const categoryFiltered = categoryList.filter(category => category.id === categoryId);\n      const providerFiltered = providers.filter(provider => provider.id === providerId);\n      setProviders(categoryFiltered[0].providers);\n      setField(providerFiltered[0]);\n    } catch (error) {\n      console.error(error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [categoryId, providerId, loading, error]);\n  console.log(field);\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  if (loading) return \"Loading...\";\n  if (error) return /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            lg: 4,\n            xl: 4,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-container\",\n              children: [field && field.fields.map(f => /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-2\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: f.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 41\n                }, this), f.type === 4 ? /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: option,\n                  as: \"select\",\n                  required: true,\n                  onChange: e => setOption(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 57\n                  }, this), f.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.v,\n                    children: option.v\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 65\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  name: f.id,\n                  type: f.type === 1 ? 'text' : f.type === 2 || f.type === 3 ? 'number' : f.type === 5 ? 'date' : 'text',\n                  placeholder: f.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"We'll never share your email with anyone else.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-2\",\n                controlId: \"value\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Amount\",\n                  required: true // value={value}\n                  // onChange={(e) => setValue(e.target.value)}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-2\",\n                controlId: \"currency\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Currency\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  required: true // value={currency}\n                  // onChange={(e) => setCurrency(e.target.value)}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"USD\",\n                    children: \"USD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            lg: 8,\n            xl: 5,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-container\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                md: 12,\n                lg: 12,\n                xl: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-2\",\n                  controlId: \"number\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Card number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Card number\",\n                    required: true,\n                    className: \"cardNumber\",\n                    value: number,\n                    onChange: e => setNumber(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                md: 12,\n                lg: 12,\n                xl: 12,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    md: 8,\n                    lg: 6,\n                    xl: 6,\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Exp date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"exp mb-2\",\n                      controlId: \"exp_month\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"ExpMonth\",\n                        required: true,\n                        className: \"exp-left\",\n                        value: exp_month,\n                        onChange: e => setExpMonth(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"exp-line\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"ExpYear\",\n                        required: true,\n                        className: \"exp-right\",\n                        value: exp_year,\n                        onChange: e => setExpYear(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    md: 8,\n                    lg: 6,\n                    xl: 6,\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"mb-2\",\n                      controlId: \"cvv\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"CVV\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"CVV\",\n                        required: true,\n                        className: \"cvv\",\n                        value: cvv,\n                        onChange: e => setCvv(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                md: 12,\n                lg: 12,\n                xl: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"submitButton\",\n                  variant: \"primary\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormScreen, \"Y+4cbBpxrKGSeaoLtUh2v2+49AE=\");\n\n_c = FormScreen;\nexport default FormScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormScreen\");","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/src/screens/FormScreen.jsx"],"names":["React","useState","useEffect","Col","Container","Form","Row","Button","Card","Message","Link","FormScreen","match","history","categoryList","categoryId","params","providerId","type","setType","field","setField","providers","setProviders","loading","setLoading","error","setError","number","setNumber","exp_month","setExpMonth","exp_year","setExpYear","cvv","setCvv","option","setOption","categoryFiltered","filter","category","id","providerFiltered","provider","console","log","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","fields","map","f","label","e","target","value","options","index","v"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Col, Container, Form, Row, Button, Card} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport {Link} from \"react-router-dom\";\n\nfunction FormScreen({match, history}) {\n\n    const categoryList = [\n        {\n            \"id\": \"1\",\n            \"name\": \"Mobile\",\n            \"providers\": [\n                {\n                    \"id\": \"1\",\n                    \"name\": \"Bakcell\",\n                    \"fields\": [\n                        {\n                            \"id\": \"prefix_id\",\n                            \"type\": 4,\n                            \"label\": \"Prefix\",\n                            \"options\": [\n                                {\"k\": \"1\", \"v\": \"055\"},\n                            ]\n                        },\n                        {\n                            \"id\": \"phone_number\",\n                            \"type\": 2,\n                            \"label\": \"Phone number\",\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"2\",\n                    \"name\": \"Nar\",\n                    \"fields\": [\n                        {\n                            \"id\": \"prefix_id\",\n                            \"type\": 4,\n                            \"label\": \"Prefix\",\n                            \"options\": [\n                                {\"k\": \"1\", \"v\": \"055\"},\n                                {\"k\": \"2\", \"v\": \"077\"},\n                            ]\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"3\",\n                    \"name\": \"Azercell\",\n                    \"fields\": [\n                        {\n                            \"id\": \"prefix_id\",\n                            \"type\": 4,\n                            \"label\": \"Prefix\",\n                            \"options\": [\n                                {\"k\": \"1\", \"v\": \"050\"},\n                                {\"k\": \"2\", \"v\": \"051\"},\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"id\": \"2\",\n            \"name\": \"Utilities\",\n            \"providers\": [\n                {\n                    \"id\": \"1\",\n                    \"name\": \"Azeriqaz\",\n                    \"fields\": [\n                        {\n                            \"id\": \"subscriber_id\",\n                            \"type\": 1,\n                            \"label\": \"Subscriber\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"2\",\n                    \"name\": \"Azerisu\",\n                    \"fields\": [\n                        {\n                            \"id\": \"prefix_id\",\n                            \"type\": 4,\n                            \"label\": \"Prefix\",\n                            \"options\": [\n                                {\"k\": \"1\", \"v\": \"Residential\"},\n                                {\"k\": \"2\", \"v\": \"Commercial\"},\n                            ]\n                        },\n                        {\n                            \"id\": \"subscriber_id\",\n                            \"type\": 1,\n                            \"label\": \"Subscriber\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"3\",\n                    \"name\": \"Grand Hayat\",\n                    \"fields\": [\n                        {\n                            \"id\": \"client_code\",\n                            \"type\": 2,\n                            \"label\": \"Client code\"\n                        }\n                    ]\n                }\n            ]\n        },\n        // {\n        //     \"id\": \"3\",\n        //     \"name\": \"Banks\",\n        //     \"providers\": [\n        //         {\n        //             \"id\": \"1\",\n        //             \"name\": \"Kapital Bank\",\n        //             \"fields\": [\n        //                 {}\n        //             ]\n        //         },\n        //         {\n        //             \"id\": \"1\",\n        //             \"name\": \"Pasha Bank\",\n        //             \"fields\": [\n        //                 {}\n        //             ]\n        //         },\n        //         {\n        //             \"id\": \"1\",\n        //             \"name\": \"Access Bank\",\n        //             \"fields\": [\n        //                 {}\n        //             ]\n        //         }\n        //     ]\n        // }\n    ]\n\n    const categoryId = match.params.categoryId;\n    const providerId = match.params.providerId;\n\n    const [type, setType] = useState(null);\n    const [field, setField] = useState();\n    const [providers, setProviders] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // form\n    const [number, setNumber] = useState('');\n    const [exp_month, setExpMonth] = useState('');\n    const [exp_year, setExpYear] = useState('');\n    const [cvv, setCvv] = useState('');\n\n    const [option, setOption] = useState('');\n\n    useEffect(() => {\n        try {\n\n            const categoryFiltered = categoryList.filter(category => category.id === categoryId);\n            const providerFiltered = providers.filter(provider => provider.id === providerId);\n\n            setProviders(categoryFiltered[0].providers);\n            setField(providerFiltered[0]);\n\n        } catch (error) {\n            console.error(error);\n            setError(error);\n        } finally {\n            setLoading(false);\n        }\n    }, [categoryId, providerId, loading, error]);\n\n    console.log(field)\n\n    const [validated, setValidated] = useState(false);\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        setValidated(true);\n\n\n\n    };\n\n\n    if (loading) return \"Loading...\";\n    if (error) return <Message variant=\"danger\">{error}</Message>\n\n    return (\n        <Container>\n            <h1>Form</h1>\n            <Link to=\"/\" className=\"btn btn-light my-3\">\n                Go Back\n            </Link>\n            <div>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Row>\n                        <Col sm={12} md={6} lg={4} xl={4}>\n                            <div className=\"card-container\">\n                                {field && field.fields.map((f) => (\n                                    <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\n                                        <Form.Label>{f.label}</Form.Label>\n                                        {\n                                            f.type === 4 ?\n                                                (\n                                                    <Form.Control\n                                                        name={option}\n                                                        as=\"select\"\n                                                        required\n                                                        onChange={(e) => setOption(e.target.value)}\n                                                    >\n                                                        <option value=\"\">Select...</option>\n                                                        {\n                                                            f.options.map((option, index) => (\n                                                                <option key={index} value={option.v} >{option.v}</option>\n                                                            ))\n                                                        }\n                                                    </Form.Control>\n                                                )\n                                                : (\n                                                    <Form.Control\n                                                        required\n                                                        name={f.id}\n                                                        type={f.type === 1 ? 'text' : f.type === 2 || f.type === 3 ? 'number' : f.type === 5 ? 'date' : 'text'}\n                                                        placeholder={f.label}\n                                                    />\n                                                )\n                                        }\n                                        <Form.Text className=\"text-muted\">\n                                            We'll never share your email with anyone else.\n                                        </Form.Text>\n                                    </Form.Group>\n                                ))}\n                                <Form.Group className=\"mb-2\" controlId=\"value\">\n                                    <Form.Label>Amount</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Amount\"\n                                        required\n                                        // value={value}\n                                        // onChange={(e) => setValue(e.target.value)}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"mb-2\" controlId=\"currency\">\n                                    <Form.Label>Currency</Form.Label>\n                                    <Form.Control\n                                        as=\"select\"\n                                        required\n                                        // value={currency}\n                                        // onChange={(e) => setCurrency(e.target.value)}\n                                    >\n                                        <option value=\"\">Select...</option>\n                                        <option value=\"USD\">USD</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </div>\n                        </Col>\n                        <Col sm={12} md={6} lg={8} xl={5}>\n                            <div className=\"card-container\">\n                                <Col sm={12} md={12} lg={12} xl={12}>\n                                    <Form.Group className=\"mb-2\" controlId=\"number\">\n                                        <Form.Label>Card number</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Card number\"\n                                            required\n                                            className=\"cardNumber\"\n                                            value={number}\n                                            onChange={(e) => setNumber(e.target.value)}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col sm={12} md={12} lg={12} xl={12}>\n                                    <Row>\n                                        <Col sm={12} md={8} lg={6} xl={6}>\n                                            <Form.Label>Exp date</Form.Label>\n                                            <Form.Group className=\"exp mb-2\" controlId=\"exp_month\">\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    placeholder=\"ExpMonth\"\n                                                    required\n                                                    className=\"exp-left\"\n                                                    value={exp_month}\n                                                    onChange={(e) => setExpMonth(e.target.value)}\n                                                />\n                                                <span className=\"exp-line\"/>\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    placeholder=\"ExpYear\"\n                                                    required\n                                                    className=\"exp-right\"\n                                                    value={exp_year}\n                                                    onChange={(e) => setExpYear(e.target.value)}\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={12} md={8} lg={6} xl={6}>\n                                            <Form.Group className=\"mb-2\" controlId=\"cvv\">\n                                                <Form.Label>CVV</Form.Label>\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    placeholder=\"CVV\"\n                                                    required\n                                                    className=\"cvv\"\n                                                    value={cvv}\n                                                    onChange={(e) => setCvv(e.target.value)}\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col sm={12} md={12} lg={12} xl={12}>\n                                    <Button className='submitButton' variant=\"primary\" type=\"submit\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </div>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </Container>\n    );\n}\n\nexport default FormScreen;\n"]},"metadata":{},"sourceType":"module"}