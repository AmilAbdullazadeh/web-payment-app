{"ast":null,"code":"import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n// @ts-ignore\n\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/node_modules/react-bootstrap/esm/Collapse.js"],"names":["classNames","css","React","useMemo","ENTERED","ENTERING","EXITED","EXITING","transitionEndListener","createChainedFunction","triggerBrowserReflow","TransitionWrapper","jsx","_jsx","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","offset","toUpperCase","slice","value","margins","parseInt","collapseStyles","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","forwardRef","onEnter","onEntering","onEntered","onExit","onExiting","className","children","props","ref","computedDimension","handleEnter","style","handleEntering","scroll","handleEntered","handleExit","handleExiting","addEndListener","role","childRef","state","innerProps","cloneElement"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"]},"metadata":{},"sourceType":"module"}