{"ast":null,"code":"import _slicedToArray from\"/Users/amilabdullayev/Desktop/Projects/web-payment-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from\"react\";import{Col,Container,Row}from\"react-bootstrap\";import Message from\"../components/Message\";import{Link}from\"react-router-dom\";import Provider from\"../components/Provider\";import{CategoryListContext}from\"../contexts/CategoryListContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProviderScreen(_ref){var match=_ref.match,history=_ref.history;var categoryId=match.params.id;var _useState=useState(),_useState2=_slicedToArray(_useState,2),categoryFiltered=_useState2[0],setCategoryFiltered=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),providers=_useState4[0],setProviders=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];// context api\nvar categoryList=useContext(CategoryListContext);useEffect(function(){try{var _categoryFiltered=categoryList.filter(function(category){return category.id===categoryId;});setCategoryFiltered(_categoryFiltered[0]);setProviders(_categoryFiltered[0]);}catch(error){console.error(error);setError(error);}finally{setLoading(false);}},[]);if(loading)return\"Loading...\";if(error)return/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error});return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Providers\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-light my-3\",children:\"Go Back\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Row,{children:providers.providers.map(function(provider){return/*#__PURE__*/_jsx(Col,{sm:12,md:6,lg:4,xl:3,children:/*#__PURE__*/_jsx(Provider,{categoryId:categoryId,provider:provider})},provider.id);})})})]});}export default ProviderScreen;","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/src/screens/ProviderScreen.jsx"],"names":["React","useState","useEffect","useContext","Col","Container","Row","Message","Link","Provider","CategoryListContext","ProviderScreen","match","history","categoryId","params","id","categoryFiltered","setCategoryFiltered","providers","setProviders","loading","setLoading","error","setError","categoryList","filter","category","console","map","provider"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,UAApC,KAAqD,OAArD,CACA,OAAQC,GAAR,CAAaC,SAAb,CAAwBC,GAAxB,KAAkC,iBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAAQC,mBAAR,KAAkC,iCAAlC,C,wFAEA,QAASC,CAAAA,cAAT,MAA0C,IAAjBC,CAAAA,KAAiB,MAAjBA,KAAiB,CAAVC,OAAU,MAAVA,OAAU,CAEtC,GAAMC,CAAAA,UAAU,CAAGF,KAAK,CAACG,MAAN,CAAaC,EAAhC,CAEA,cAAgDf,QAAQ,EAAxD,wCAAOgB,gBAAP,eAAyBC,mBAAzB,eACA,eAAkCjB,QAAQ,EAA1C,yCAAOkB,SAAP,eAAkBC,YAAlB,eACA,eAA8BnB,QAAQ,CAAC,IAAD,CAAtC,yCAAOoB,OAAP,eAAgBC,UAAhB,eACA,eAA0BrB,QAAQ,CAAC,IAAD,CAAlC,yCAAOsB,KAAP,eAAcC,QAAd,eAEA;AACA,GAAMC,CAAAA,YAAY,CAAGtB,UAAU,CAACO,mBAAD,CAA/B,CAEAR,SAAS,CAAC,UAAM,CACZ,GAAI,CACA,GAAMe,CAAAA,iBAAgB,CAAGQ,YAAY,CAACC,MAAb,CAAoB,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACX,EAAT,GAAgBF,UAApB,EAA5B,CAAzB,CACAI,mBAAmB,CAACD,iBAAgB,CAAC,CAAD,CAAjB,CAAnB,CACAG,YAAY,CAACH,iBAAgB,CAAC,CAAD,CAAjB,CAAZ,CACH,CAAC,MAAOM,KAAP,CAAc,CACZK,OAAO,CAACL,KAAR,CAAcA,KAAd,EACAC,QAAQ,CAACD,KAAD,CAAR,CACH,CAPD,OAOU,CACND,UAAU,CAAC,KAAD,CAAV,CACH,CACJ,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAID,OAAJ,CAAa,MAAO,YAAP,CACb,GAAIE,KAAJ,CAAW,mBAAO,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,KAA3B,EAAP,CAEX,mBACI,MAAC,SAAD,yBACI,iCADJ,cAEI,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,oBAAvB,qBAFJ,cAKI,kCACI,KAAC,GAAD,WACKJ,SAAS,CAACA,SAAV,CAAoBU,GAApB,CAAwB,SAACC,QAAD,qBACrB,KAAC,GAAD,EAAuB,EAAE,CAAE,EAA3B,CAA+B,EAAE,CAAE,CAAnC,CAAsC,EAAE,CAAE,CAA1C,CAA6C,EAAE,CAAE,CAAjD,uBACI,KAAC,QAAD,EAAU,UAAU,CAAEhB,UAAtB,CAAkC,QAAQ,CAAEgB,QAA5C,EADJ,EAAUA,QAAQ,CAACd,EAAnB,CADqB,EAAxB,CADL,EADJ,EALJ,GADJ,CAiBH,CAED,cAAeL,CAAAA,cAAf","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport {Link} from \"react-router-dom\";\nimport Provider from \"../components/Provider\";\nimport {CategoryListContext} from \"../contexts/CategoryListContext\";\n\nfunction ProviderScreen({match, history}) {\n\n    const categoryId = match.params.id;\n\n    const [categoryFiltered, setCategoryFiltered] = useState();\n    const [providers, setProviders] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // context api\n    const categoryList = useContext(CategoryListContext);\n\n    useEffect(() => {\n        try {\n            const categoryFiltered = categoryList.filter(category => category.id === categoryId);\n            setCategoryFiltered(categoryFiltered[0]);\n            setProviders(categoryFiltered[0]);\n        } catch (error) {\n            console.error(error);\n            setError(error);\n        } finally {\n            setLoading(false);\n        }\n    }, []);\n\n    if (loading) return \"Loading...\";\n    if (error) return <Message variant=\"danger\">{error}</Message>\n\n    return (\n        <Container>\n            <h1>Providers</h1>\n            <Link to=\"/\" className=\"btn btn-light my-3\">\n                Go Back\n            </Link>\n            <div>\n                <Row>\n                    {providers.providers.map((provider) => (\n                        <Col key={provider.id} sm={12} md={6} lg={4} xl={3}>\n                            <Provider categoryId={categoryId} provider={provider}/>\n                        </Col>\n                    ))}\n                </Row>\n            </div>\n        </Container>\n    );\n}\n\nexport default ProviderScreen;\n"]},"metadata":{},"sourceType":"module"}