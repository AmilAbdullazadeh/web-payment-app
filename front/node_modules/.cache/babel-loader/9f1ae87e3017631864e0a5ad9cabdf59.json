{"ast":null,"code":"import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/node_modules/react-bootstrap/esm/ElementChildren.js"],"names":["React","map","children","func","index","Children","child","isValidElement","forEach"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,CAAaC,QAAb,EAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,KAAK,GAAG,CAAZ;AACA,SAAOJ,KAAK,CAACK,QAAN,CAAeJ,GAAf,CAAmBC,QAAnB,EAA6B,UAAAI,KAAK;AAAA,WAAI,aAAaN,KAAK,CAACO,cAAN,CAAqBD,KAArB,IAA8BH,IAAI,CAACG,KAAD,EAAQF,KAAK,EAAb,CAAlC,GAAqDE,KAAtE;AAAA,GAAlC,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASE,OAAT,CAAiBN,QAAjB,EAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,KAAK,GAAG,CAAZ;AACAJ,EAAAA,KAAK,CAACK,QAAN,CAAeG,OAAf,CAAuBN,QAAvB,EAAiC,UAAAI,KAAK,EAAI;AACxC,SAAK,aAAaN,KAAK,CAACO,cAAN,CAAqBD,KAArB,CAAlB,EAA+CH,IAAI,CAACG,KAAD,EAAQF,KAAK,EAAb,CAAJ;AAChD,GAFD;AAGD;;AAED,SAASH,GAAT,EAAcO,OAAd","sourcesContent":["import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };"]},"metadata":{},"sourceType":"module"}