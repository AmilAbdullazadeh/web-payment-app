{"ast":null,"code":"import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    const eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, eventKey !== activeEventKey && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/node_modules/react-bootstrap/esm/AccordionButton.js"],"names":["React","useContext","classNames","AccordionContext","AccordionItemContext","useBootstrapPrefix","jsx","_jsx","useAccordionButton","eventKey","onClick","activeEventKey","onSelect","e","eventKeyPassed","AccordionButton","forwardRef","as","Component","bsPrefix","className","props","ref","accordionOnClick","type","displayName"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,OAAtC,EAA+C;AACpD,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA;AAFI,MAGFX,UAAU,CAACE,gBAAD,CAHd;AAIA,SAAOU,CAAC,IAAI;AACV;AACJ;AACA;AACA;AACI,UAAMC,cAAc,GAAGL,QAAQ,KAAKE,cAAb,GAA8B,IAA9B,GAAqCF,QAA5D;AACA,QAAIG,QAAJ,EAAcA,QAAQ,CAACE,cAAD,EAAiBD,CAAjB,CAAR;AACd,QAAIH,OAAJ,EAAaA,OAAO,CAACG,CAAD,CAAP;AACd,GARD;AASD;AACD,MAAME,eAAe,GAAG,aAAaf,KAAK,CAACgB,UAAN,CAAiB,CAAC;AACrD;AACAC,EAAAA,EAAE,EAAEC,SAAS,GAAG,QAFqC;AAGrDC,EAAAA,QAHqD;AAIrDC,EAAAA,SAJqD;AAKrDV,EAAAA,OALqD;AAMrD,KAAGW;AANkD,CAAD,EAOnDC,GAPmD,KAO3C;AACTH,EAAAA,QAAQ,GAAGd,kBAAkB,CAACc,QAAD,EAAW,kBAAX,CAA7B;AACA,QAAM;AACJV,IAAAA;AADI,MAEFR,UAAU,CAACG,oBAAD,CAFd;AAGA,QAAMmB,gBAAgB,GAAGf,kBAAkB,CAACC,QAAD,EAAWC,OAAX,CAA3C;AACA,QAAM;AACJC,IAAAA;AADI,MAEFV,UAAU,CAACE,gBAAD,CAFd;;AAIA,MAAIe,SAAS,KAAK,QAAlB,EAA4B;AAC1BG,IAAAA,KAAK,CAACG,IAAN,GAAa,QAAb;AACD;;AAED,SAAO,aAAajB,IAAI,CAACW,SAAD,EAAY;AAClCI,IAAAA,GAAG,EAAEA,GAD6B;AAElCZ,IAAAA,OAAO,EAAEa,gBAFyB;AAGlC,OAAGF,KAH+B;AAIlC,qBAAiBZ,QAAQ,KAAKE,cAJI;AAKlCS,IAAAA,SAAS,EAAElB,UAAU,CAACkB,SAAD,EAAYD,QAAZ,EAAsBV,QAAQ,KAAKE,cAAb,IAA+B,WAArD;AALa,GAAZ,CAAxB;AAOD,CA5BoC,CAArC;AA6BAI,eAAe,CAACU,WAAhB,GAA8B,iBAA9B;AACA,eAAeV,eAAf","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    const eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, eventKey !== activeEventKey && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;"]},"metadata":{},"sourceType":"module"}