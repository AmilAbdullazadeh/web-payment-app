{"ast":null,"code":"import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1); // TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\n\n\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/front/node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"names":["classNames","camelize","React","useBootstrapPrefix","jsx","_jsx","pascalCase","str","toUpperCase","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","forwardRef","className","bsPrefix","as","Tag","props","ref","resolvedPrefix"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,UAAU,GAAGC,GAAG,IAAIA,GAAG,CAAC,CAAD,CAAH,CAAOC,WAAP,KAAuBP,QAAQ,CAACM,GAAD,CAAR,CAAcE,KAAd,CAAoB,CAApB,CAAjD,C,CAEA;;;AACA,eAAe,SAASC,kBAAT,CAA4BC,MAA5B,EAAoC;AACjDC,EAAAA,WAAW,GAAGN,UAAU,CAACK,MAAD,CADyB;AAEjDE,EAAAA,SAFiD;AAGjDC,EAAAA;AAHiD,IAI/C,EAJW,EAIP;AACN,QAAMC,WAAW,GAAG,aAAab,KAAK,CAACc,UAAN,CAAiB,CAAC;AACjDC,IAAAA,SADiD;AAEjDC,IAAAA,QAFiD;AAGjDC,IAAAA,EAAE,EAAEC,GAAG,GAAGP,SAAS,IAAI,KAH0B;AAIjD,OAAGQ;AAJ8C,GAAD,EAK/CC,GAL+C,KAKvC;AACT,UAAMC,cAAc,GAAGpB,kBAAkB,CAACe,QAAD,EAAWP,MAAX,CAAzC;AACA,WAAO,aAAaN,IAAI,CAACe,GAAD,EAAM;AAC5BE,MAAAA,GAAG,EAAEA,GADuB;AAE5BL,MAAAA,SAAS,EAAEjB,UAAU,CAACiB,SAAD,EAAYM,cAAZ,CAFO;AAG5B,SAAGF;AAHyB,KAAN,CAAxB;AAKD,GAZgC,CAAjC;AAaAN,EAAAA,WAAW,CAACD,YAAZ,GAA2BA,YAA3B;AACAC,EAAAA,WAAW,CAACH,WAAZ,GAA0BA,WAA1B;AACA,SAAOG,WAAP;AACD","sourcesContent":["import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"]},"metadata":{},"sourceType":"module"}