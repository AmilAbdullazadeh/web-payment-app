{"ast":null,"code":"var _jsxFileName = \"/Users/amilabdullayev/Desktop/Projects/web-payment-app/src/screens/ReceiptScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Container, Form, Row, Button, Card } from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReceiptScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    try {} catch (error) {\n      console.error(error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [loading, error]);\n  if (loading) return \"Loading...\";\n  if (error) return /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReceiptScreen, \"SXWAzFwbcALCYWswwJxoaTIbO8U=\");\n\n_c = ReceiptScreen;\nexport default ReceiptScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReceiptScreen\");","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/src/screens/ReceiptScreen.jsx"],"names":["React","useState","useEffect","Col","Container","Form","Row","Button","Card","Message","Link","ReceiptScreen","match","history","loading","setLoading","error","setError","console"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,IAAxB,EAA8BC,GAA9B,EAAmCC,MAAnC,EAA2CC,IAA3C,QAAsD,iBAAtD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,SAASC,aAAT,CAAuB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAvB,EAAyC;AAAA;;AAErC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAGH,CAHD,CAGE,OAAOc,KAAP,EAAc;AACZE,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAND,SAMU;AACND,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAVQ,EAUN,CAACD,OAAD,EAAUE,KAAV,CAVM,CAAT;AAYA,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA,cAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAzBQL,a;;KAAAA,a;AA2BT,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Col, Container, Form, Row, Button, Card} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport {Link} from \"react-router-dom\";\n\nfunction ReceiptScreen({match, history}) {\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        try {\n\n\n        } catch (error) {\n            console.error(error);\n            setError(error);\n        } finally {\n            setLoading(false);\n        }\n    }, [loading, error]);\n\n    if (loading) return \"Loading...\";\n    if (error) return <Message variant=\"danger\">{error}</Message>\n\n    return (\n        <Container>\n\n        </Container>\n    );\n}\n\nexport default ReceiptScreen;\n"]},"metadata":{},"sourceType":"module"}