{"ast":null,"code":"var _jsxFileName = \"/Users/amilabdullayev/Desktop/Projects/web-payment-app/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './styles/global.css';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProviderScreen from \"./screens/ProviderScreen\";\nimport FormScreen from \"./screens/FormScreen\";\nimport { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [categories, setCategories] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const CategoryListContext = /*#__PURE__*/createContext(categories);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/payments/categories\").then(response => response.json()).then(data => {\n      //  check local storage data\n      const localData = JSON.parse(localStorage.getItem('categoryListStorage'));\n\n      if (localData !== undefined && localData !== null) {\n        localStorage.setItem('categoryListStorage', JSON.stringify(data));\n        setCategories(localData);\n      } // local storage\n\n\n      localStorage.setItem('categoryListStorage', JSON.stringify(data));\n      setCategories(data);\n    }).catch(error => {\n      console.error(error);\n      setError(error);\n    }).finally(() => setLoading(false));\n  }, [loading, error]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(CategoryListContext.Provider, {\n        value: [categories, loading, error],\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          component: HomeScreen,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/category/:id\",\n          component: ProviderScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/form/:categoryId/:providerId\",\n          component: FormScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"G7eq4P7XgIMnN1Okcd2WqaKQFkw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/front/src/App.js"],"names":["HashRouter","Router","Route","HomeScreen","ProviderScreen","FormScreen","createContext","useEffect","useState","App","categories","setCategories","loading","setLoading","error","setError","CategoryListContext","fetch","then","response","json","data","localData","JSON","parse","localStorage","getItem","undefined","setItem","stringify","catch","console","finally"],"mappings":";;;AAAA,OAAO,qBAAP;AACA,SAAQA,UAAU,IAAIC,MAAtB,EAA8BC,KAA9B,QAA0C,kBAA1C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAAQC,aAAR,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,EAA5C;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMQ,mBAAmB,gBAAGV,aAAa,CAACI,UAAD,CAAzC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ;AACA,YAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAX,CAAlB;;AACA,UAAIJ,SAAS,KAAKK,SAAd,IAA2BL,SAAS,KAAK,IAA7C,EAAmD;AAC/CG,QAAAA,YAAY,CAACG,OAAb,CAAqB,qBAArB,EAA4CL,IAAI,CAACM,SAAL,CAAeR,IAAf,CAA5C;AACAV,QAAAA,aAAa,CAACW,SAAD,CAAb;AACH,OANW,CAQZ;;;AACAG,MAAAA,YAAY,CAACG,OAAb,CAAqB,qBAArB,EAA4CL,IAAI,CAACM,SAAL,CAAeR,IAAf,CAA5C;AACAV,MAAAA,aAAa,CAACU,IAAD,CAAb;AACH,KAbL,EAcKS,KAdL,CAcYhB,KAAD,IAAW;AACdiB,MAAAA,OAAO,CAACjB,KAAR,CAAcA,KAAd;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAjBL,EAkBKkB,OAlBL,CAkBa,MAAMnB,UAAU,CAAC,KAAD,CAlB7B;AAmBH,GApBQ,EAoBN,CAACD,OAAD,EAAUE,KAAV,CApBM,CAAT;AAsBA,sBACI,QAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,QAAA,KAAK,EAAE,CAACJ,UAAD,EAAaE,OAAb,EAAsBE,KAAtB,CAArC;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAEX,UAA3B;AAAuC,UAAA,KAAK;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,+BAAZ;AAA4C,UAAA,SAAS,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA1CQI,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import './styles/global.css';\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProviderScreen from \"./screens/ProviderScreen\";\nimport FormScreen from \"./screens/FormScreen\";\nimport {createContext, useEffect, useState} from 'react';\n\nfunction App() {\n\n    const [categories, setCategories] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const CategoryListContext = createContext(categories);\n\n    useEffect(() => {\n        fetch(\"http://localhost:8080/payments/categories\")\n            .then((response) => response.json())\n            .then((data) => {\n                //  check local storage data\n                const localData = JSON.parse(localStorage.getItem('categoryListStorage'));\n                if (localData !== undefined && localData !== null) {\n                    localStorage.setItem('categoryListStorage', JSON.stringify(data));\n                    setCategories(localData)\n                }\n\n                // local storage\n                localStorage.setItem('categoryListStorage', JSON.stringify(data));\n                setCategories(data)\n            })\n            .catch((error) => {\n                console.error(error);\n                setError(error)\n            })\n            .finally(() => setLoading(false))\n    }, [loading, error]);\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <CategoryListContext.Provider value={[categories, loading, error]}>\n                    <Route path=\"/\" component={HomeScreen} exact/>\n                    <Route path=\"/category/:id\" component={ProviderScreen}/>\n                    <Route path=\"/form/:categoryId/:providerId\" component={FormScreen}/>\n                </CategoryListContext.Provider>\n            </div>\n        </Router>\n    )\n        ;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}