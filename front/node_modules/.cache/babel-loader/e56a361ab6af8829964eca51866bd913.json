{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","map":{"version":3,"sources":["/Users/amilabdullayev/Desktop/Projects/web-payment-app/node_modules/react-bootstrap/esm/FormCheck.js"],"names":["classNames","React","useContext","useMemo","Feedback","FormCheckInput","FormCheckLabel","FormContext","useBootstrapPrefix","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FormCheck","forwardRef","id","bsPrefix","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","className","style","title","type","label","children","as","props","ref","controlId","innerFormContext","hasLabel","input","Provider","value","tooltip","displayName","Object","assign","Input","Label"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});"]},"metadata":{},"sourceType":"module"}